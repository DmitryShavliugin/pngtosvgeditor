{"version":3,"file":"ext-opensave.js","sources":["../../../../node_modules/browser-fs-access/dist/index.modern.js","../../../../src/editor/extensions/ext-opensave/ext-opensave.js","../../../../src/editor/extensions/ext-opensave/locale/en.js","../../../../src/editor/extensions/ext-opensave/locale/fr.js","../../../../src/editor/extensions/ext-opensave/locale/sv.js","../../../../src/editor/extensions/ext-opensave/locale/tr.js","../../../../src/editor/extensions/ext-opensave/locale/uk.js","../../../../src/editor/extensions/ext-opensave/locale/zh-CN.js"],"sourcesContent":["const e=(()=>{if(\"undefined\"==typeof self)return!1;if(\"top\"in self&&self!==top)try{top.window.document._=0}catch(e){return!1}return\"showOpenFilePicker\"in self})(),t=e?Promise.resolve().then(function(){return l}):Promise.resolve().then(function(){return v});async function n(...e){return(await t).default(...e)}const r=e?Promise.resolve().then(function(){return y}):Promise.resolve().then(function(){return b});async function i(...e){return(await r).default(...e)}const a=e?Promise.resolve().then(function(){return m}):Promise.resolve().then(function(){return k});async function o(...e){return(await a).default(...e)}const s=async e=>{const t=await e.getFile();return t.handle=e,t};var c=async(e=[{}])=>{Array.isArray(e)||(e=[e]);const t=[];e.forEach((e,n)=>{t[n]={description:e.description||\"Files\",accept:{}},e.mimeTypes?e.mimeTypes.map(r=>{t[n].accept[r]=e.extensions||[]}):t[n].accept[\"*/*\"]=e.extensions||[]});const n=await window.showOpenFilePicker({id:e[0].id,startIn:e[0].startIn,types:t,multiple:e[0].multiple||!1,excludeAcceptAllOption:e[0].excludeAcceptAllOption||!1}),r=await Promise.all(n.map(s));return e[0].multiple?r:r[0]},l={__proto__:null,default:c};function u(e){function t(e){if(Object(e)!==e)return Promise.reject(new TypeError(e+\" is not an object.\"));var t=e.done;return Promise.resolve(e.value).then(function(e){return{value:e,done:t}})}return u=function(e){this.s=e,this.n=e.next},u.prototype={s:null,n:null,next:function(){return t(this.n.apply(this.s,arguments))},return:function(e){var n=this.s.return;return void 0===n?Promise.resolve({value:e,done:!0}):t(n.apply(this.s,arguments))},throw:function(e){var n=this.s.return;return void 0===n?Promise.reject(e):t(n.apply(this.s,arguments))}},new u(e)}const p=async(e,t,n=e.name,r)=>{const i=[],a=[];var o,s=!1,c=!1;try{for(var l,d=function(e){var t,n,r,i=2;for(\"undefined\"!=typeof Symbol&&(n=Symbol.asyncIterator,r=Symbol.iterator);i--;){if(n&&null!=(t=e[n]))return t.call(e);if(r&&null!=(t=e[r]))return new u(t.call(e));n=\"@@asyncIterator\",r=\"@@iterator\"}throw new TypeError(\"Object is not async iterable\")}(e.values());s=!(l=await d.next()).done;s=!1){const o=l.value,s=`${n}/${o.name}`;\"file\"===o.kind?a.push(o.getFile().then(t=>(t.directoryHandle=e,t.handle=o,Object.defineProperty(t,\"webkitRelativePath\",{configurable:!0,enumerable:!0,get:()=>s})))):\"directory\"!==o.kind||!t||r&&r(o)||i.push(p(o,t,s,r))}}catch(e){c=!0,o=e}finally{try{s&&null!=d.return&&await d.return()}finally{if(c)throw o}}return[...(await Promise.all(i)).flat(),...await Promise.all(a)]};var d=async(e={})=>{e.recursive=e.recursive||!1,e.mode=e.mode||\"read\";const t=await window.showDirectoryPicker({id:e.id,startIn:e.startIn,mode:e.mode});return(await(await t.values()).next()).done?[t]:p(t,e.recursive,void 0,e.skipDirectory)},y={__proto__:null,default:d},f=async(e,t=[{}],n=null,r=!1,i=null)=>{Array.isArray(t)||(t=[t]),t[0].fileName=t[0].fileName||\"Untitled\";const a=[];let o=null;if(e instanceof Blob&&e.type?o=e.type:e.headers&&e.headers.get(\"content-type\")&&(o=e.headers.get(\"content-type\")),t.forEach((e,t)=>{a[t]={description:e.description||\"Files\",accept:{}},e.mimeTypes?(0===t&&o&&e.mimeTypes.push(o),e.mimeTypes.map(n=>{a[t].accept[n]=e.extensions||[]})):o?a[t].accept[o]=e.extensions||[]:a[t].accept[\"*/*\"]=e.extensions||[]}),n)try{await n.getFile()}catch(e){if(n=null,r)throw e}const s=n||await window.showSaveFilePicker({suggestedName:t[0].fileName,id:t[0].id,startIn:t[0].startIn,types:a,excludeAcceptAllOption:t[0].excludeAcceptAllOption||!1});!n&&i&&i(s);const c=await s.createWritable();if(\"stream\"in e){const t=e.stream();return await t.pipeTo(c),s}return\"body\"in e?(await e.body.pipeTo(c),s):(await c.write(await e),await c.close(),s)},m={__proto__:null,default:f},w=async(e=[{}])=>(Array.isArray(e)||(e=[e]),new Promise((t,n)=>{const r=document.createElement(\"input\");r.type=\"file\";const i=[...e.map(e=>e.mimeTypes||[]),...e.map(e=>e.extensions||[])].join();r.multiple=e[0].multiple||!1,r.accept=i||\"\",r.style.display=\"none\",document.body.append(r);const a=e=>{\"function\"==typeof o&&o(),t(e)},o=e[0].legacySetup&&e[0].legacySetup(a,()=>o(n),r),s=()=>{window.removeEventListener(\"focus\",s),r.remove()};r.addEventListener(\"click\",()=>{window.addEventListener(\"focus\",s)}),r.addEventListener(\"change\",()=>{window.removeEventListener(\"focus\",s),r.remove(),a(r.multiple?Array.from(r.files):r.files[0])}),\"showPicker\"in HTMLInputElement.prototype?r.showPicker():r.click()})),v={__proto__:null,default:w},h=async(e=[{}])=>(Array.isArray(e)||(e=[e]),e[0].recursive=e[0].recursive||!1,new Promise((t,n)=>{const r=document.createElement(\"input\");r.type=\"file\",r.webkitdirectory=!0;const i=e=>{\"function\"==typeof a&&a(),t(e)},a=e[0].legacySetup&&e[0].legacySetup(i,()=>a(n),r);r.addEventListener(\"change\",()=>{let t=Array.from(r.files);e[0].recursive?e[0].recursive&&e[0].skipDirectory&&(t=t.filter(t=>t.webkitRelativePath.split(\"/\").every(t=>!e[0].skipDirectory({name:t,kind:\"directory\"})))):t=t.filter(e=>2===e.webkitRelativePath.split(\"/\").length),i(t)}),\"showPicker\"in HTMLInputElement.prototype?r.showPicker():r.click()})),b={__proto__:null,default:h},P=async(e,t={})=>{Array.isArray(t)&&(t=t[0]);const n=document.createElement(\"a\");let r=e;\"body\"in e&&(r=await async function(e,t){const n=e.getReader(),r=new ReadableStream({start:e=>async function t(){return n.read().then(({done:n,value:r})=>{if(!n)return e.enqueue(r),t();e.close()})}()}),i=new Response(r),a=await i.blob();return n.releaseLock(),new Blob([a],{type:t})}(e.body,e.headers.get(\"content-type\"))),n.download=t.fileName||\"Untitled\",n.href=URL.createObjectURL(await r);const i=()=>{\"function\"==typeof a&&a()},a=t.legacySetup&&t.legacySetup(i,()=>a(),n);return n.addEventListener(\"click\",()=>{setTimeout(()=>URL.revokeObjectURL(n.href),3e4),i()}),n.click(),null},k={__proto__:null,default:P};export{i as directoryOpen,h as directoryOpenLegacy,d as directoryOpenModern,n as fileOpen,w as fileOpenLegacy,c as fileOpenModern,o as fileSave,P as fileSaveLegacy,f as fileSaveModern,e as supported};\n","/* globals seConfirm */\n/**\n * @file ext-opensave.js\n *\n * @license MIT\n *\n * @copyright 2020 OptimistikSAS\n *\n */\n\n/**\n   * @type {module:svgcanvas.EventHandler}\n   * @param {external:Window} wind\n   * @param {module:svgcanvas.SvgCanvas#event:saved} svg The SVG source\n   * @listens module:svgcanvas.SvgCanvas#event:saved\n   * @returns {void}\n   */\n\n// import {ImageTracer} from 'imagetracerjs';\nimport { fileOpen, fileSave } from 'browser-fs-access';\n\n\n\n\n\nconst name = 'opensave'\nlet handle = null\n\nconst loadExtensionTranslation = async function (svgEditor) {\n  let translationModule\n  const lang = svgEditor.configObj.pref('lang')\n  try {\n    translationModule = await import(`./locale/${lang}.js`)\n  } catch (_error) {\n    console.warn(`Missing translation (${lang}) for ${name} - using 'en'`)\n    translationModule = await import('./locale/en.js')\n  }\n  svgEditor.i18next.addResourceBundle(lang, 'translation', translationModule.default, true, true)\n}\n\nexport default {\n  name,\n  async init (_S) {\n    const svgEditor = this\n    const { svgCanvas } = svgEditor\n    const { $id, $click } = svgCanvas\n    await loadExtensionTranslation(svgEditor)\n    /**\n    * @param {Event} e\n    * @returns {void}\n    */\n    const importImage = (e) => {\n      $id('se-prompt-dialog').title = this.i18next.t('notification.loadingImage')\n      $id('se-prompt-dialog').setAttribute('close', false)\n      e.stopPropagation()\n      e.preventDefault()\n      const file = (e.type === 'drop') ? e.dataTransfer.files[0] : e.currentTarget.files[0]\n      if (!file) {\n        $id('se-prompt-dialog').setAttribute('close', true)\n        return\n      }\n\n      if (!file.type.includes('image')) {\n        return\n      }\n      // Detected an image\n      // svg handling\n      let reader\n      if (file.type.includes('svg')) {\n        reader = new FileReader()\n        reader.onloadend = (ev) => {\n          // imgImport.shiftKey (shift key pressed or not) will determine if import should preserve dimension)\n          const newElement = this.svgCanvas.importSvgString(ev.target.result, imgImport.shiftKey)\n          this.svgCanvas.alignSelectedElements('m', 'page')\n          this.svgCanvas.alignSelectedElements('c', 'page')\n          // highlight imported element, otherwise we get strange empty selectbox\n          this.svgCanvas.selectOnly([newElement])\n          $id('se-prompt-dialog').setAttribute('close', true)\n        }\n        reader.readAsText(file)\n      } else {\n        // bitmap handling\n        reader = new FileReader()\n        reader.onloadend = ({ target: { result } }) => {\n          /**\n              * Insert the new image until we know its dimensions.\n              * @param {Float} imageWidth\n              * @param {Float} imageHeight\n              * @returns {void}\n              */\n          const insertNewImage = (imageWidth, imageHeight) => {\n            const newImage = this.svgCanvas.addSVGElementsFromJson({\n              element: 'image',\n              attr: {\n                x: 0,\n                y: 0,\n                width: imageWidth,\n                height: imageHeight,\n                id: this.svgCanvas.getNextId(),\n                style: 'pointer-events:inherit'\n              }\n            })\n            this.svgCanvas.setHref(newImage, result)\n            this.svgCanvas.selectOnly([newImage])\n            this.svgCanvas.alignSelectedElements('m', 'page')\n            this.svgCanvas.alignSelectedElements('c', 'page')\n            this.topPanel.updateContextPanel()\n            $id('se-prompt-dialog').setAttribute('close', true)\n          }\n          // create dummy img so we know the default dimensions\n          let imgWidth = 100\n          let imgHeight = 100\n          const img = new Image()\n          img.style.opacity = 0\n          img.addEventListener('load', () => {\n            imgWidth = img.offsetWidth || img.naturalWidth || img.width\n            imgHeight = img.offsetHeight || img.naturalHeight || img.height\n            insertNewImage(imgWidth, imgHeight)\n          })\n          img.src = result\n        }\n        reader.readAsDataURL(file)\n      }\n    }\n    // create an input with type file to open the filesystem dialog\n    const imgImport = document.createElement('input')\n    imgImport.type = 'file'\n    imgImport.addEventListener('change', importImage)\n    // dropping a svg file will import it in the svg as well\n    this.workarea.addEventListener('drop', importImage)\n\n    const clickClear = async function () {\n      const [x, y] = svgEditor.configObj.curConfig.dimensions\n      const ok = await seConfirm(svgEditor.i18next.t('notification.QwantToClear'))\n      if (ok === 'Cancel') {\n        return\n      }\n      svgEditor.leftPanel.clickSelect()\n      svgEditor.svgCanvas.clear()\n      svgEditor.svgCanvas.setResolution(x, y)\n      svgEditor.updateCanvas(true)\n      svgEditor.zoomImage()\n      svgEditor.layersPanel.populateLayers()\n      svgEditor.topPanel.updateContextPanel()\n      svgEditor.topPanel.updateTitle('untitled.svg')\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n    //Convert from PNG\n\n    const clickConvert = async function () {\n        // Ask user before clearing an unsaved SVG\n        const response = await svgEditor.openPrep();\n        if (response === 'Cancel') return;\n    \n        svgCanvas.clear();\n    \n        try {\n            // Open PNG file\n            const blob = await fileOpen({\n                mimeTypes: ['image/png']\n            });\n    \n            // Read file as data URL\n            const dataSvg = await readAsDataURL(blob);\n    \n            // Convert image to SVG using ImageTracer\n            const svgContent = await new Promise((resolve, reject) => {\n                ImageTracer.imageToSVG(\n                    dataSvg,\n                    (svgString) => {\n                        if (svgString) {\n                            resolve(svgString);\n                        } else {\n                            reject(new Error(\"Failed to generate SVG.\"));\n                        }\n                    },\n                    'detailed'\n                );\n            });\n\n            // Load the SVG content into the editor\n            await svgEditor.loadSvgString(svgContent);\n            svgEditor.updateCanvas();\n            handle = blob.handle;\n            svgEditor.topPanel.updateTitle(blob.name);\n    \n            // Run extensions after loading document\n            svgEditor.svgCanvas.runExtensions('onOpenedDocument', {\n                name: blob.name,\n                lastModified: blob.lastModified,\n                size: blob.size,\n                type: blob.type\n            });\n    \n            svgEditor.layersPanel.populateLayers();\n        } catch (err) {\n            if (err.name !== 'AbortError') {\n                console.error(err);\n            }\n        }\n    };\n\n    function readAsDataURL(blob) {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = (e) => resolve(e.target.result);\n            reader.onerror = reject;\n            reader.readAsDataURL(blob);\n        });\n    }\n    \n    function simulateProgress(callback) {\n        // isConverting.value = true;\n        // progress.value = 0;\n    \n        // const interval = setInterval(() => {\n        //     if (progress.value >= 90) {\n        //         clearInterval(interval);\n        //         callback();\n        //     } else {\n        //         progress.value += 10; // Increment progress by 10% every step\n        //     }\n        // }, 300); // Update progress every 300ms\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    /**\n     * By default,  this.editor.svgCanvas.open() is a no-op. It is up to an extension\n     *  mechanism (opera widget, etc.) to call `setCustomHandlers()` which\n     *  will make it do something.\n     * @returns {void}\n     */\n    const clickOpen = async function () {\n      // ask user before clearing an unsaved SVG\n      const response = await svgEditor.openPrep()\n      if (response === 'Cancel') { return }\n      svgCanvas.clear()\n      try {\n        const blob = await fileOpen({\n          mimeTypes: ['image/*']\n        })\n        const svgContent = await blob.text()\n        await svgEditor.loadSvgString(svgContent)\n        svgEditor.updateCanvas()\n        handle = blob.handle\n        svgEditor.topPanel.updateTitle(blob.name)\n        svgEditor.svgCanvas.runExtensions('onOpenedDocument', {\n          name: blob.name,\n          lastModified: blob.lastModified,\n          size: blob.size,\n          type: blob.type\n        })\n        svgEditor.layersPanel.populateLayers()\n      } catch (err) {\n        if (err.name !== 'AbortError') {\n          return console.error(err)\n        }\n      }\n    }\n    const b64toBlob = (b64Data, contentType = '', sliceSize = 512) => {\n      const byteCharacters = atob(b64Data)\n      const byteArrays = []\n      for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        const slice = byteCharacters.slice(offset, offset + sliceSize)\n        const byteNumbers = new Array(slice.length)\n        for (let i = 0; i < slice.length; i++) {\n          byteNumbers[i] = slice.charCodeAt(i)\n        }\n        const byteArray = new Uint8Array(byteNumbers)\n        byteArrays.push(byteArray)\n      }\n      const blob = new Blob(byteArrays, { type: contentType })\n      return blob\n    }\n\n    /**\n     *\n     * @returns {void}\n     */\n    const clickSave = async function (type) {\n      const $editorDialog = $id('se-svg-editor-dialog')\n      const editingsource = $editorDialog.getAttribute('dialog') === 'open'\n      if (editingsource) {\n        svgEditor.saveSourceEditor()\n      } else {\n        // In the future, more options can be provided here\n        const saveOpts = {\n          images: svgEditor.configObj.pref('img_save'),\n          round_digits: 2\n        }\n        // remove the selected outline before serializing\n        svgCanvas.clearSelection()\n        // Update save options if provided\n        if (saveOpts) {\n          const saveOptions = svgCanvas.mergeDeep(svgCanvas.getSvgOption(), saveOpts)\n          for (const [key, value] of Object.entries(saveOptions)) {\n            svgCanvas.setSvgOption(key, value)\n          }\n        }\n        svgCanvas.setSvgOption('apply', true)\n\n        // no need for doctype, see https://jwatt.org/svg/authoring/#doctype-declaration\n        const svg = '<?xml version=\"1.0\"?>\\n' + svgCanvas.svgCanvasToString()\n        const b64Data = svgCanvas.encode64(svg)\n        const blob = b64toBlob(b64Data, 'image/svg+xml')\n        try {\n          if (type === 'save' && handle !== null) {\n            const throwIfExistingHandleNotGood = false\n            handle = await fileSave(blob, {\n              fileName: 'untitled.svg',\n              extensions: ['.svg']\n            }, handle, throwIfExistingHandleNotGood)\n          } else {\n            handle = await fileSave(blob, {\n              fileName: svgEditor.title,\n              extensions: ['.svg']\n            })\n          }\n          svgEditor.topPanel.updateTitle(handle.name)\n          svgCanvas.runExtensions('onSavedDocument', {\n            name: handle.name,\n            kind: handle.kind\n          })\n        } catch (err) {\n          if (err.name !== 'AbortError') {\n            return console.error(err)\n          }\n        }\n      }\n    }\n\n    return {\n      name: svgEditor.i18next.t(`${name}:name`),\n      // The callback should be used to load the DOM with the appropriate UI items\n      callback () {\n        const buttonTemplate = `\n        <se-menu-item id=\"tool_clear\" label=\"opensave.new_doc\" shortcut=\"N\" src=\"new.svg\"></se-menu-item>`\n        svgCanvas.insertChildAtIndex($id('main_button'), buttonTemplate, 0)\n\n        const convertButtonTemplate = '<se-menu-item id=\"tool_convert\" label=\"opensave.convert_image_doc\" src=\"open.svg\"></se-menu-item>'\n        svgCanvas.insertChildAtIndex($id('main_button'), convertButtonTemplate, 1)\n\n        const openButtonTemplate = '<se-menu-item id=\"tool_open\" label=\"opensave.open_image_doc\" src=\"open.svg\"></se-menu-item>'\n        svgCanvas.insertChildAtIndex($id('main_button'), openButtonTemplate, 1)\n        const saveButtonTemplate = '<se-menu-item id=\"tool_save\" label=\"opensave.save_doc\" shortcut=\"S\" src=\"saveImg.svg\"></se-menu-item>'\n        svgCanvas.insertChildAtIndex($id('main_button'), saveButtonTemplate, 2)\n        const saveAsButtonTemplate = '<se-menu-item id=\"tool_save_as\" label=\"opensave.save_as_doc\" src=\"saveImg.svg\"></se-menu-item>'\n        svgCanvas.insertChildAtIndex($id('main_button'), saveAsButtonTemplate, 3)\n        const importButtonTemplate = '<se-menu-item id=\"tool_import\" label=\"tools.import_doc\" src=\"importImg.svg\"></se-menu-item>'\n        svgCanvas.insertChildAtIndex($id('main_button'), importButtonTemplate, 4)\n\n        // handler\n        $click($id('tool_convert'), clickConvert.bind(this))\n\n        $click($id('tool_clear'), clickClear.bind(this))\n        $click($id('tool_open'), clickOpen.bind(this))\n        $click($id('tool_save'), clickSave.bind(this, 'save'))\n        $click($id('tool_save_as'), clickSave.bind(this, 'saveas'))\n        // tool_import pressed with shiftKey will not scale the SVG\n        $click($id('tool_import'), (ev) => { imgImport.shiftKey = ev.shiftKey; imgImport.click() })\n      }\n    }\n  }\n}\n","export default {\n  opensave: {\n    new_doc: 'New Image',\n    open_image_doc: 'Open SVG',\n    convert_image_doc: 'Convert PNG',\n    save_doc: 'Save SVG',\n    save_as_doc: 'Save as SVG'\n  }\n}\n","export default {\n  opensave: {\n    new_doc: 'Nouvelle image',\n    open_image_doc: 'Ouvrir le SVG',\n    convert_image_doc: 'Convert PNG',\n    save_doc: 'Enregistrer l\\'image',\n    save_as_doc: 'Enregistrer en tant qu\\'image'\n  }\n}\n","export default {\n  opensave: {\n    new_doc: 'Ny bild',\n    open_image_doc: 'Öppna SVG',\n    convert_image_doc: 'Convert PNG',\n    save_doc: 'Spara SVG',\n    save_as_doc: 'Spara som SVG'\n  }\n}\n","export default {\n  opensave: {\n    new_doc: 'Yeni Resim',\n    open_image_doc: 'SVG Aç',\n    convert_image_doc: 'Convert PNG',\n    save_doc: 'SVG Kaydet',\n    save_as_doc: 'SVG olarak Kaydet'\n  }\n}\n","export default {\n  opensave: {\n    new_doc: 'Нове Зображення',\n    open_image_doc: 'Відкрити SVG',\n    convert_image_doc: 'Convert PNG',\n    save_doc: 'Зберегти SVG',\n    save_as_doc: 'Зберегти SVG як'\n  }\n}\n","export default {\n  opensave: {\n    new_doc: '新图片',\n    open_image_doc: '打开 SVG',\n    convert_image_doc: 'Convert PNG',\n    save_doc: '保存图像',\n    save_as_doc: '另存为图像'\n  }\n}\n"],"names":["e","self","top","window","document","_","t","Promise","resolve","then","l","v","async","n","default","arguments","y","b","a","m","k","o","s","getFile","handle","__proto__","length","undefined","Array","isArray","forEach","description","accept","mimeTypes","map","r","extensions","showOpenFilePicker","id","startIn","types","multiple","excludeAcceptAllOption","all","u","Object","reject","TypeError","done","value","this","next","prototype","apply","return","throw","p","name","i","c","d","Symbol","asyncIterator","iterator","call","values","kind","push","directoryHandle","defineProperty","configurable","enumerable","get","flat","recursive","mode","showDirectoryPicker","skipDirectory","fileName","Blob","type","headers","showSaveFilePicker","suggestedName","createWritable","stream","pipeTo","body","write","close","createElement","join","style","display","append","legacySetup","removeEventListener","remove","addEventListener","from","files","HTMLInputElement","showPicker","click","webkitdirectory","filter","webkitRelativePath","split","every","getReader","ReadableStream","start","read","_ref","enqueue","Response","blob","releaseLock","download","href","URL","createObjectURL","setTimeout","revokeObjectURL","loadExtensionTranslation","svgEditor","translationModule","lang","configObj","pref","__variableDynamicImportRuntime0__","_error","console","warn","en$1","i18next","addResourceBundle","extOpensave","init","_S","svgCanvas","$id","$click","importImage","title","setAttribute","stopPropagation","preventDefault","file","dataTransfer","currentTarget","includes","reader","FileReader","onloadend","ev","newElement","importSvgString","target","result","imgImport","shiftKey","alignSelectedElements","selectOnly","readAsText","insertNewImage","imageWidth","imageHeight","newImage","addSVGElementsFromJson","element","attr","x","width","height","getNextId","setHref","topPanel","updateContextPanel","imgWidth","imgHeight","img","Image","opacity","offsetWidth","naturalWidth","offsetHeight","naturalHeight","src","readAsDataURL","workarea","clickClear","curConfig","dimensions","seConfirm","leftPanel","clickSelect","clear","setResolution","updateCanvas","zoomImage","layersPanel","populateLayers","updateTitle","clickConvert","openPrep","fileOpen","dataSvg","onload","onerror","svgContent","ImageTracer","imageToSVG","svgString","Error","loadSvgString","runExtensions","lastModified","size","err","error","clickOpen","text","clickSave","getAttribute","saveSourceEditor","saveOpts","images","round_digits","clearSelection","saveOptions","mergeDeep","getSvgOption","key","entries","setSvgOption","svg","svgCanvasToString","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","slice","byteNumbers","charCodeAt","byteArray","Uint8Array","b64toBlob","encode64","throwIfExistingHandleNotGood","fileSave","callback","insertChildAtIndex","bind","opensave","new_doc","open_image_doc","convert_image_doc","save_doc","save_as_doc"],"mappings":"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","x_google_ignoreList":[0]}